// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WebSettings {
  id                         Int     @id @default(1)
  logoUrl                    String?
  companyName                String?
  whatsappSales              String?
  footerText                 String?
  address                    String?
  contactEmail               String?
  contactPhone               String?
  openingHours               String?
  socialMedia                Json?
  menuItems                  Json?
  heroHeadline               String?
  heroDescription            String?
  heroImageUrl               String?
  heroButton1Text            String?
  heroButton1Link            String?
  heroButton2Text            String?
  heroButton2Link            String?
  featureCards               Json?
  aboutUsSubtitle            String?
  aboutUsTitle               String?
  aboutUsDescription         String? @db.Text
  aboutUsImageUrl            String?
  aboutUsChecklist           Json?
  servicesSubtitle           String?
  servicesTitle              String?
  servicesDescription        String? @db.Text
  ctaHeadline                String?
  ctaDescription             String?
  ctaImageUrl                String?
  ctaButtonText              String?
  ctaButtonLink              String?
  trustedByText              String?
  trustedByLogos             Json?
  servicesPageTitle          String?
  servicesPageSubtitle       String?
  servicesPageCommitmentTitle String?
  servicesPageCommitmentText String? @db.Text
  servicesPageHeaderImageUrl String?
  solutionsPageTitle         String?
  solutionsPageSubtitle      String?
  aboutPageTitle             String?
  aboutPageSubtitle          String?
  missionTitle               String?
  missionText                String? @db.Text
  visionTitle                String?
  visionText                 String? @db.Text
  resourcesPageTitle         String?
  resourcesPageSubtitle      String?
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt
}

model ProductCategory {
  id            Int                  @id @default(autoincrement())
  name          String               @unique
  slug          String               @unique
  description   String?
  imageUrl      String?
  subCategories ProductSubCategory[]
}

model ProductSubCategory {
  id         Int             @id @default(autoincrement())
  name       String
  category   ProductCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int
  products   Product[]
}

model Product {
  id                      Int                @id @default(autoincrement())
  title                   String
  slug                    String             @unique
  subCategory             ProductSubCategory @relation(fields: [subCategoryId], references: [id], onDelete: Cascade)
  subCategoryId           Int
  description             String             @db.Text
  longDescription         String?            @db.Text
  images                  Json?
  features                Json?
  technicalSpecifications Json?
  generalSpecifications   Json?
  metaTitle               String?
  metaDescription         String?            @db.Text
  tokopediaUrl            String?
  shopeeUrl               String?
  createdAt               DateTime           @default(now())
  updatedAt               DateTime           @updatedAt
}

model ProfessionalService {
  id              Int      @id @default(autoincrement())
  icon            String
  title           String
  slug            String   @unique
  description     String   @db.Text
  longDescription String?  @db.Text
  imageUrl        String?
  details         Json?
  benefits        Json?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Solution {
  id          Int       @id @default(autoincrement())
  icon        String
  title       String
  slug        String    @unique
  description String    @db.Text
  image       String?
  aiHint      String?
  keyPoints   Json?
  parent      Solution? @relation("SubSolutions", fields: [parentId], references: [id], onDelete: Cascade)
  parentId    Int?
  children    Solution[] @relation("SubSolutions")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}


model PartnerLogo {
  id  Int    @id @default(autoincrement())
  src String
  alt String
}

model CustomerLogo {
  id  Int    @id @default(autoincrement())
  src String
  alt String
}

model NewsItem {
  id        Int      @id @default(autoincrement())
  title     String
  slug      String   @unique
  category  String
  image     String?
  content   String?  @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
