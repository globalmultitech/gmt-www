// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WebSettings {
  id                         Int     @id @default(1)
  logoUrl                    String?
  companyName                String?
  whatsappSales              String?
  footerText                 String?
  address                    String?
  contactEmail               String?
  contactPhone               String?
  openingHours               String?
  socialMedia                Json?   @default("{}")
  menuItems                  Json?   @default("[]")
  heroHeadline               String?
  heroDescription            String?
  heroImageUrl               String?
  heroButton1Text            String?
  heroButton1Link            String?
  heroButton2Text            String?
  heroButton2Link            String?
  featureCards               Json?   @default("[]")
  aboutUsSubtitle            String?
  aboutUsTitle               String?
  aboutUsDescription         String?
  aboutUsImageUrl            String?
  aboutUsChecklist           Json?   @default("[]")
  servicesSubtitle           String?
  servicesTitle              String?
  servicesDescription        String?
  ctaHeadline                String?
  ctaDescription             String?
  ctaImageUrl                String?
  ctaButtonText              String?
  ctaButtonLink              String?
  trustedByText              String?
  trustedByLogos             Json?   @default("[]")
  testimonials               Json?   @default("[]")
  servicesPageTitle          String?
  servicesPageSubtitle       String?
  servicesPageCommitmentTitle String?
  servicesPageCommitmentText String?
  servicesPageHeaderImageUrl String?
  solutionsPageTitle         String?
  solutionsPageSubtitle      String?
  aboutPageTitle             String?
  aboutPageSubtitle          String?
  missionTitle               String?
  missionText                String?
  visionTitle                String?
  visionText                 String?
  resourcesPageTitle         String?
  resourcesPageSubtitle      String?
  contactPageTitle           String?
  contactPageSubtitle        String?
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt
}

model ProfessionalService {
  id              Int      @id @default(autoincrement())
  icon            String
  title           String
  slug            String   @unique
  description     String
  longDescription String?
  imageUrl        String?
  details         Json?
  benefits        Json?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Solution {
  id          Int        @id @default(autoincrement())
  icon        String
  title       String
  slug        String     @unique
  description String
  image       String?
  aiHint      String?
  keyPoints   Json?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  parentId    Int?
  parent      Solution?  @relation("SubSolutions", fields: [parentId], references: [id], onDelete: Cascade)
  children    Solution[] @relation("SubSolutions")
}

model ProductCategory {
  id            Int                  @id @default(autoincrement())
  name          String               @unique
  slug          String               @unique
  description   String?
  imageUrl      String?
  subCategories ProductSubCategory[]
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
}

model ProductSubCategory {
  id         Int             @id @default(autoincrement())
  name       String
  categoryId Int
  category   ProductCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  products   Product[]
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@unique([name, categoryId])
}

model Product {
  id                      Int                @id @default(autoincrement())
  title                   String
  slug                    String             @unique
  description             String
  longDescription         String?
  images                  Json
  features                Json
  technicalSpecifications Json
  generalSpecifications   Json
  metaTitle               String?
  metaDescription         String?
  tokopediaUrl            String?
  shopeeUrl               String?
  subCategoryId           Int
  subCategory             ProductSubCategory @relation(fields: [subCategoryId], references: [id], onDelete: Restrict)
  createdAt               DateTime           @default(now())
  updatedAt               DateTime           @updatedAt
}

model PartnerLogo {
  id          Int      @id @default(autoincrement())
  src         String
  alt         String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CustomerLogo {
  id        Int      @id @default(autoincrement())
  src       String
  alt       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model NewsItem {
  id        Int      @id @default(autoincrement())
  title     String
  slug      String   @unique
  category  String?
  image     String?
  content   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
